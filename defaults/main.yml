# SPDX-FileCopyrightText: 2023 - 2024 Nikita Chernyi
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2024 Sergio Durigan Junior
# SPDX-FileCopyrightText: 2025 MASH project contributors
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
# Project source code URL: https://github.com/prometheus/blackbox_exporter

prometheus_blackbox_exporter_enabled: true

prometheus_blackbox_exporter_identifier: prometheus-blackbox-exporter
prometheus_blackbox_exporter_base_path: "/{{ prometheus_blackbox_exporter_identifier }}"
prometheus_blackbox_exporter_config_path: "{{ prometheus_blackbox_exporter_base_path }}/config"

# renovate: datasource=docker depName=prom/blackbox-exporter versioning=semver
prometheus_blackbox_exporter_version: v0.25.0

prometheus_blackbox_exporter_uid: ''
prometheus_blackbox_exporter_gid: ''

# The hostname at which Prometheus blackbox exporter is served. You don't need to configure it if you're not exposing this.
prometheus_blackbox_exporter_hostname: ''

# The path at which Prometheus blackbox exporter is exposed. You don't need to configure it if you're not exposing this.
# This value must either be `/` or not end with a slash.
prometheus_blackbox_exporter_path_prefix: "/metrics/blackbox-exporter"

prometheus_blackbox_exporter_container_image: "{{ prometheus_blackbox_exporter_container_image_registry_prefix }}prom/blackbox-exporter:{{ prometheus_blackbox_exporter_container_image_tag }}"
prometheus_blackbox_exporter_container_image_tag: "{{ prometheus_blackbox_exporter_version }}"
prometheus_blackbox_exporter_container_image_registry_prefix: "{{ prometheus_blackbox_exporter_container_image_registry_prefix_upstream }}"
prometheus_blackbox_exporter_container_image_registry_prefix_upstream: "{{ prometheus_blackbox_exporter_container_image_registry_prefix_upstream_default }}"
prometheus_blackbox_exporter_container_image_registry_prefix_upstream_default: docker.io/
prometheus_blackbox_exporter_container_image_force_pull: "{{ prometheus_blackbox_exporter_container_image.endswith(':latest') }}"

# Controls whether the prometheus-blackbox-exporter container exposes its HTTP port (tcp/9100 in the container).
#
# Takes an "<ip>:<port>" value (e.g. "127.0.0.1:9100"), just a port number or empty string to not expose.
prometheus_blackbox_exporter_container_http_host_bind_port: ''

# The base container network
#
# Official recommendations are to run this container with `--net=host`,
# but we don't do that, since it:
# - exposes the metrics web server way too publicly (we'd potentially like to add HTTP Basic Auth, etc.)
# - or listens on a loopback interface only (--net=host and 127.0.0.1:9100), which is not reachable from a local Prometheus container
#
# Not using `--net=host` means that our network statistic reports are likely broken (inaccurate),
# because blackbox-exporter can't see all interfaces, etc.
# For now, we'll live with that, until someone develops a better solution.
prometheus_blackbox_exporter_container_network: "{{ prometheus_blackbox_exporter_identifier }}"

# The port number in the container
prometheus_blackbox_exporter_container_http_port: 9100

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
#
# Use this to expose this container to another reverse proxy, which runs in a different container network,
# without exposing all other container services to that other reverse-proxy.
#
# For background, see: https://github.com/spantaleev/matrix-docker-ansible-deploy/issues/1498
prometheus_blackbox_exporter_container_additional_networks: "{{ prometheus_blackbox_exporter_container_additional_networks_auto + prometheus_blackbox_exporter_container_additional_networks_custom }}"
prometheus_blackbox_exporter_container_additional_networks_auto: []
prometheus_blackbox_exporter_container_additional_networks_custom: []

# prometheus_blackbox_exporter_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `prometheus_blackbox_exporter_container_labels_additional_labels`.
prometheus_blackbox_exporter_container_labels_traefik_enabled: "{{ true if prometheus_blackbox_exporter_hostname else false }}"
prometheus_blackbox_exporter_container_labels_traefik_docker_network: "{{ prometheus_blackbox_exporter_container_network }}"
prometheus_blackbox_exporter_container_labels_traefik_hostname: "{{ prometheus_blackbox_exporter_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/metrics`).
prometheus_blackbox_exporter_container_labels_traefik_path_prefix: "{{ prometheus_blackbox_exporter_path_prefix }}"
prometheus_blackbox_exporter_container_labels_traefik_entrypoints: web-secure
prometheus_blackbox_exporter_container_labels_traefik_tls: "{{ prometheus_blackbox_exporter_container_labels_traefik_entrypoints != 'web' }}"
prometheus_blackbox_exporter_container_labels_traefik_tls_certResolver: default  # noqa var-naming

prometheus_blackbox_exporter_container_labels_metrics_middleware_basic_auth_enabled: false
# See: https://doc.traefik.io/traefik/middlewares/http/basicauth/#users
prometheus_blackbox_exporter_container_labels_metrics_middleware_basic_auth_users: ''

# prometheus_blackbox_exporter_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# prometheus_blackbox_exporter_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
prometheus_blackbox_exporter_container_labels_additional_labels: ''

# A list of extra arguments to pass to the container
prometheus_blackbox_exporter_container_extra_arguments: []

# A list of extra arguments to pass to the blackbox_exporter process
prometheus_blackbox_exporter_process_extra_arguments: []

# List of systemd services that prometheus-blackbox-exporter.service depends on
prometheus_blackbox_exporter_systemd_required_services_list: "{{ prometheus_blackbox_exporter_systemd_required_services_list_default + prometheus_blackbox_exporter_systemd_required_services_list_auto + prometheus_blackbox_exporter_systemd_required_services_list_custom }}"
prometheus_blackbox_exporter_systemd_required_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
prometheus_blackbox_exporter_systemd_required_services_list_auto: []
prometheus_blackbox_exporter_systemd_required_services_list_custom: []

# List of systemd services that prometheus-blackbox-exporter.service wants
prometheus_blackbox_exporter_systemd_wanted_services_list: []

# Default blackbox exporter configuration template which covers the generic use case.
# You can customize it by controlling the various variables inside it.
#
# For a more advanced customization, you can extend the default (see `prometheus_blackbox_exporter_configuration_extension_yaml`)
# or completely replace this variable with your own template.
prometheus_blackbox_exporter_configuration_yaml: "{{ lookup('template', 'templates/config.yml.j2') }}"

prometheus_blackbox_exporter_configuration_extension_yaml: |
  # Your custom YAML configuration for blackbox exporter goes here.
  # This configuration extends the default starting configuration (`prometheus_blackbox_exporter_configuration_yaml`).
  #
  # You can override individual variables from the default configuration, or introduce new ones.
  #
  # If you need something more special, you can take full control by
  # completely redefining `prometheus_blackbox_exporter_configuration_yaml`.

prometheus_blackbox_exporter_configuration_extension: "{{ prometheus_blackbox_exporter_configuration_extension_yaml | from_yaml if prometheus_blackbox_exporter_configuration_extension_yaml | from_yaml is mapping else {} }}"

# Holds the final borgmatic configuration (a combination of the default and its extension).
# You most likely don't need to touch this variable. Instead, see `prometheus_blackbox_exporter_configuration_yaml`.
prometheus_blackbox_exporter_configuration: "{{ prometheus_blackbox_exporter_configuration_yaml | from_yaml | combine(prometheus_blackbox_exporter_configuration_extension, recursive=True) }}"
